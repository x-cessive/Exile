/**  * fn_incomingRequest.sqf * Modified by Jan Babor 2016 *  * Originally * ExileClient_system_network_dispatchIncomingMessage * * Exile Mod * www.exilemod.com * Â© 2015 Exile Mod Team * * This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.  * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/. */private["_payload","_messageName","_messageParameters","_allowedParameters","_message","_exception"];_payload = _this;try {	if (isNil "_payload") then	{		throw "Message payload is not defined!";	};	if (typeName _payload != "ARRAY") then	{		throw "Message payload is not a array!";	};	if (count _payload != 2) then	{		throw format ["Wrong envelope field count! Payload: %1", _payload]; 	};	_messageName = _payload select 0;	_messageParameters = _payload select 1;		if !(isClass (missionConfigFile >> "CfgNetworkMessages" >> _messageName)) then	{		throw format ["Forbidden message name! Payload: %1", _payload]; 	};	_allowedParameters = getArray(missionConfigFile >> "CfgNetworkMessages" >> _messageName >> "parameters");	if (count _messageParameters != count _allowedParameters) then	{		throw format ["Parameter count mismatch! Payload: %1", _payload]; 	};	{		if (_x != typeName (_messageParameters select _forEachIndex)) then		{			throw format ["Parameter type mismatch! Payload: %1", _payload];		};	}	forEach _allowedParameters;	diag_log format["Dispatching message '%1'...", _messageName];	call compile format["_messageParameters call ExAd_fnc_%1;",_messageName];}catch{	["incomingRequest",_exception] call ExAd_fnc_debugHandler;};true